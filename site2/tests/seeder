#!/usr/bin/ruby
# some seed data for test environment
#
# Copyright (C) 2012 Mohammed Morsi <mo@morsi.org>
# Licensed under the AGPLv3+ http://www.gnu.org/licenses/agpl.txt

require 'rubygems'
require 'omega'

include Omega::Client::DSL

include Motel
include Motel::MovementStrategies

RJR::Logger.log_level= ::Logger::INFO

node = RJR::AMQPNode.new(:node_id => 'seeder', :broker => 'localhost')
login node, 'admin', 'nimda'

galaxy 'Zeus' do |g|
  system 'Athena', 'HR1925', :location => Location.new(:x => 240, :y => -360, :z => 110) do |sys|
    asteroid 'ast1', :location => Location.new(:x => 31, :y => -22, :z => 15) do |ast|
      resource :resource => rand_resource, :quantity => 325
    end
    asteroid 'ast2', :location => Location.new(:x => 15, :y => 51, :z => 42) do |ast|
      resource :resource => rand_resource, :quantity => 500
    end
  end

  system 'Aphrodite', 'V866', :location => Location.new(:x => -420, :y => 119, :z => 90) do |sys|
    asteroid 'ast3', :location => Location.new(:x => -25, :y => -17, :z => -32) do |ast|
      resource :resource => rand_resource, :quantity => 750
    end
    asteroid 'ast4', :location => Location.new(:x => 10, :y => -42, :z => -22) do |ast|
      resource :resource => rand_resource, :quantity => 750
    end

    planet 'Xeno',
           :movement_strategy => Elliptical.new(:relative_to => Elliptical::RELATIVE_TO_FOCI, :speed => 0.1,
                                                :eccentricity => 0.16, :semi_latus_rectum => 140,
                                                :direction => Motel.random_axis) do |pl|
    end
  end

  system 'Philo', 'XXYY', :location => Location.new(:x => 922, :y => -109, :z => 75) do |sys|
  end
end

jump_gate system('Athena'), system('Aphrodite'), :location => Location.new(:x => -150, :y => -150, :z => -150)
jump_gate system('Aphrodite'), system('Athena'), :location => Location.new(:x => -150, :y =>  150, :z => -150)

#########################################

user 'mmorsi', 'isromm' do |u|
  role :regular_user
end

user 'mmorsi-omegaverse', 'isromm' do |u|
  role :regular_user
end

user 'opponent', 'tnenoppo'

system_athena    = system('Athena')
system_aphrodite = system('Aphrodite')
system_philo     = system('Philo')

station("mmorsi-manufacturing-station1") do |station|
  station.type     = :manufacturing
  station.user_id  = 'mmorsi'
  station.solar_system = system_athena
  station.location = Location.new(:x => -160,  :y=> 0,  :z => -160)
end

station("mmorsi-manufacturing-station2") do |station|
  station.type     = :manufacturing
  station.user_id  = 'mmorsi'
  station.solar_system = system_athena
  station.location = Location.new(:x => 30,  :y=> -40,  :z => 20)
end

ship("mmorsi-mining-ship1") do |ship|
  ship.type     = :mining
  ship.user_id  = 'mmorsi'
  ship.solar_system = system_athena
  ship.location = Location.new(:x => 20, :y=> -30, :z => 15)
end

ship("mmorsi-corvette-ship1") do |ship|
  ship.type     = :corvette
  ship.user_id  = 'mmorsi'
  ship.solar_system = system_athena
  ship.location = Location.new(:x => -130,  :y=> -130,  :z => -130)
end

ship("mmorsi-corvette-ship2") do |ship|
  ship.type     = :corvette
  ship.user_id  = 'mmorsi'
  ship.solar_system = system_athena
  ship.location = Location.new(:x => 0,  :y=> 0,  :z => 0)
end

ship("mmorsi-corvette-ship3") do |ship|
  ship.type     = :corvette
  ship.user_id  = 'mmorsi'
  ship.solar_system = system_athena
  ship.location = Location.new(:x => -150,  :y=> 0,  :z => -150)
end

ship("mmorsi-corvette-ship4") do |ship|
  ship.type     = :corvette
  ship.user_id  = 'mmorsi'
  ship.solar_system = system_philo
  ship.location = Location.new(:x => -150,  :y=> 0,  :z => -150)
end

ship("opponent-mining-ship1") do |ship|
  ship.type     = :mining
  ship.user_id  = 'opponent'
  ship.solar_system = system_athena
  ship.location = Location.new(:x => -140, :y=> 10, :z => 140)
end

ship("opponent-mining-ship2") do |ship|
  ship.type     = :mining
  ship.user_id  = 'opponent'
  ship.solar_system = system_aphrodite
  ship.location = Location.new(:x => -130, :y=> 0, :z => 130)
end

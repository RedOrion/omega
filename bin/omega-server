#!/usr/bin/ruby
# A motel server executable
# Executable to launch various rjr methods 
#
# Flags:
#  -h --help
#
# Copyright (C) 2011 Mohammed Morsi <mo@morsi.org>
# Licensed under the AGPLv3+ http://www.gnu.org/licenses/agpl.txt

require 'rubygems'
require 'optparse'
require 'omega'

######################


def main()
  # setup cmd line options
  opts = OptionParser.new do |opts|
    opts.on("-h", "--help", "Print help message") do
       puts opts
       exit
    end
  end

  # parse cmd line
  begin
    opts.parse!(ARGV)
  rescue OptionParser::InvalidOption
    puts opts
    exit
  end

  RJR::Logger.log_level = ::Logger::DEBUG

  Motel::RJRAdapter.init
  Users::RJRAdapter.init
  Cosmos::RJRAdapter.init
  Manufactured::RJRAdapter.init

  amqp_node  = RJR::AMQPNode.new  :node_id => 'omega', :broker => 'localhost'
  ws_node    = RJR::WSNode.new    :node_id => 'omega', :host   => 'localhost', :port => 8080
  www_node   = RJR::WebNode.new   :node_id => 'omega', :host   => 'localhost', :port => 8888
  local_node = RJR::LocalNode.new :node_id => 'omega' # not technically needed

  multi_node = RJR::MultiNode.new :nodes => [amqp_node, ws_node, www_node, local_node]

  # create an initial superadmin user
  admin = Omega::Roles.create_user('admin', 'nimda')
  Omega::Roles.create_user_role(admin, :superadmin)

  multi_node.listen
  multi_node.terminate # TODO run in signal handler
end

main()

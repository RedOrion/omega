#!/usr/bin/ruby
# Generate motel seed data
#
# Copyright (C) 2012 Mohammed Morsi <mo@morsi.org>
# Licensed under the AGPLv3+ http://www.gnu.org/licenses/agpl.txt

require 'rubygems'
require 'motel'
require 'cosmos'
require 'rjr'

MAX_GALAXIES = 2
MAX_SYSTEMS_PER_GALAXY = 3
MAX_PLANETS_PER_SYSTEM = 3
MAX_MOONS_PER_PLANET = 2

def main()
  RJR::Logger.log_level= ::Logger::INFO

  rjr_node = RJR::AMQPNode.new :node_id => 'seeder', :broker => 'localhost'

  total_galaxies = total_systems = total_planets = total_moons = 0

  num_galaxies = rand(MAX_GALAXIES)
  0.upto(num_galaxies) { |gi|
    total_galaxies += 1
    g = rjr_node.invoke_request('motel-queue', 'create_entity', 
             Cosmos::Galaxy.new(:name => "galaxy#{total_galaxies}"), :universe)
    puts "Created galaxy #{g.name}"

    num_systems = rand(MAX_SYSTEMS_PER_GALAXY)
    0.upto(num_systems) { |si|
      total_systems += 1
      sys = rjr_node.invoke_request('motel-queue', 'create_entity',
             Cosmos::SolarSystem.new(:name => "system#{total_systems}",
                                     :location => Motel::Location.random(:max => g.size)), g)
      puts "Created system #{sys.name}"

      num_planets = rand(MAX_PLANETS_PER_SYSTEM)
      0.upto(num_planets) { |pi|
        total_planets += 1
        # TODO randomize movement strategy
        ploc = Motel::Location.random(:max => sys.size)
        ploc.movement_strategy = Motel::MovementStrategies::Elliptical.new :relative_to => :center,
                                                                           :speed => 0.1,
                                                                           :semi_latus_rectum => 100,
                                                                           :eccentricity => 0.5
        pl = rjr_node.invoke_request('motel-queue', 'create_entity',
                  Cosmos::Planet.new(:name => "planet#{total_planets}",
                                     :location => ploc), sys)
        puts "Created planet #{pl.name}"

        num_moons = rand(MAX_MOONS_PER_PLANET)
        0.upto(num_moons) { |mi|
          total_moons += 1
          mn = rjr_node.invoke_request('motel-queue', 'create_entity',
               Cosmos::Moon.new(:name => "moon#{total_moons}",
                 :location => Motel::Location.random(:min => pl.size, :max => pl.size * 1.3)), pl)
          puts "Created moon #{mn.name}"
        }
      }
    }
  }

  #galaxy = rjr_node.invoke_request('motel-queue', 'get_entity', 'galaxy', 'galaxy1')
end

main()
